{"pageProps":{"rule":"# `prefer-includes`\n\nEnforce `includes` method over `indexOf` method.\n\nUntil ES5, we were using `String#indexOf` method to check whether a string contains an arbitrary substring or not.\nUntil ES2015, we were using `Array#indexOf` method to check whether an array contains an arbitrary value or not.\n\nES2015 has added `String#includes` and ES2016 has added `Array#includes`.\nIt makes code more understandable if we use those `includes` methods for the purpose.\n\n## Rule Details\n\nThis rule is aimed at suggesting `includes` method if `indexOf` method was used to check whether an object contains an arbitrary value or not.\n\nIf the receiver object of the `indexOf` method call has `includes` method and the two methods have the same parameters, this rule does suggestion.\nThere are such types: `String`, `Array`, `ReadonlyArray`, and typed arrays.\n\nAdditionally, this rule reports the tests of simple regular expressions in favor of `String#includes`.\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\nlet str: string;\nlet array: any[];\nlet readonlyArray: ReadonlyArray<any>;\nlet typedArray: UInt8Array;\nlet maybe: string;\nlet userDefined: {\n  indexOf(x: any): number;\n  includes(x: any): boolean;\n};\n\nstr.indexOf(value) !== -1;\narray.indexOf(value) !== -1;\nreadonlyArray.indexOf(value) === -1;\ntypedArray.indexOf(value) > -1;\nmaybe?.indexOf('') !== -1;\nuserDefined.indexOf(value) >= 0;\n\n// simple RegExp test\n/foo/.test(str);\n```\n\n### ‚úÖ Correct\n\n```ts\nlet array: any[];\nlet readonlyArray: ReadonlyArray<any>;\nlet typedArray: UInt8Array;\nlet userDefined: {\n  indexOf(x: any): number;\n  includes(x: any): boolean;\n};\nlet mismatchExample: {\n  indexOf(x: any, fromIndex?: number): number;\n  includes(x: any): boolean;\n};\n\nstr.includes(value);\narray.includes(value);\nreadonlyArray.includes(value);\ntypedArray.includes(value);\nuserDefined.includes(value);\n\n// the two methods have different parameters.\nmismatchExample.indexOf(value) >= 0;\n```\n\n## Options\n\nThere are no options.\n\n## When Not To Use It\n\nIf you don't want to suggest `includes`, you can safely turn this rule off.\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [x] üí≠ Requires type information\n"},"__N_SSG":true}