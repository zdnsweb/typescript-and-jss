{"pageProps":{"rule":"# `adjacent-overload-signatures`\n\nRequire that member overloads be consecutive.\n\nGrouping overloaded members together can improve readability of the code.\n\n## Rule Details\n\nThis rule aims to standardize the way overloaded members are organized.\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\ndeclare namespace Foo {\n  export function foo(s: string): void;\n  export function foo(n: number): void;\n  export function bar(): void;\n  export function foo(sn: string | number): void;\n}\n\ntype Foo = {\n  foo(s: string): void;\n  foo(n: number): void;\n  bar(): void;\n  foo(sn: string | number): void;\n};\n\ninterface Foo {\n  foo(s: string): void;\n  foo(n: number): void;\n  bar(): void;\n  foo(sn: string | number): void;\n}\n\nclass Foo {\n  foo(s: string): void;\n  foo(n: number): void;\n  bar(): void {}\n  foo(sn: string | number): void {}\n}\n\nexport function foo(s: string): void;\nexport function foo(n: number): void;\nexport function bar(): void;\nexport function foo(sn: string | number): void;\n```\n\n### ‚úÖ Correct\n\n```ts\ndeclare namespace Foo {\n  export function foo(s: string): void;\n  export function foo(n: number): void;\n  export function foo(sn: string | number): void;\n  export function bar(): void;\n}\n\ntype Foo = {\n  foo(s: string): void;\n  foo(n: number): void;\n  foo(sn: string | number): void;\n  bar(): void;\n};\n\ninterface Foo {\n  foo(s: string): void;\n  foo(n: number): void;\n  foo(sn: string | number): void;\n  bar(): void;\n}\n\nclass Foo {\n  foo(s: string): void;\n  foo(n: number): void;\n  foo(sn: string | number): void {}\n  bar(): void {}\n}\n\nexport function bar(): void;\nexport function foo(s: string): void;\nexport function foo(n: number): void;\nexport function foo(sn: string | number): void;\n```\n\n## Options\n\n```jsonc\n// .eslintrc.json\n{\n  \"rules\": {\n    \"@typescript-eslint/adjacent-overload-signatures\": \"error\"\n  }\n}\n```\n\nThis rule is not configurable.\n\n## When Not To Use It\n\nIf you don't care about the general structure of the code, then you will not need this rule.\n\n## Related To\n\n- TSLint: [adjacent-overload-signatures](https://palantir.github.io/tslint/rules/adjacent-overload-signatures/)\n\n## Attributes\n\n- [x] ‚úÖ Recommended\n- [ ] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}