{"pageProps":{"rule":"# `no-misused-new`\n\nEnforce valid definition of `new` and `constructor`.\n\nWarns on apparent attempts to define constructors for interfaces or `new` for classes.\n\n## Rule Details\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\nclass C {\n  new(): C;\n}\n\ninterface I {\n  new (): I;\n  constructor(): void;\n}\n```\n\n### ‚úÖ Correct\n\n```ts\nclass C {\n  constructor() {}\n}\ninterface I {\n  new (): C;\n}\n```\n\n## Options\n\n```jsonc\n// .eslintrc.json\n{\n  \"rules\": {\n    \"@typescript-eslint/no-misused-new\": \"error\"\n  }\n}\n```\n\nThis rule is not configurable.\n\n## Related To\n\n- TSLint: [no-misused-new](https://palantir.github.io/tslint/rules/no-misused-new/)\n\n## Attributes\n\n- [x] ‚úÖ Recommended\n- [ ] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}