{"pageProps":{"rule":"# `comma-dangle`\n\nRequire or disallow trailing comma.\n\n## Rule Details\n\nThis rule extends the base [`eslint/comma-dangle`](https://eslint.org/docs/rules/comma-dangle) rule.\nIt adds support for TypeScript syntax.\n\nSee the [ESLint documentation](https://eslint.org/docs/rules/comma-dangle) for more details on the `comma-dangle` rule.\n\n## Rule Changes\n\n```jsonc\n{\n  // note you must disable the base rule as it can report incorrect errors\n  \"comma-dangle\": \"off\",\n  \"@typescript-eslint/comma-dangle\": [\"error\"]\n}\n```\n\nIn addition to the options supported by the `comma-dangle` rule in ESLint core, the rule adds the following options:\n\n## Options\n\nThis rule has a string option and an object option.\n\n- Object option:\n\n  - `\"enums\"` is for trailing comma in enum. (e.g. `enum Foo = {Bar,}`)\n  - `\"generics\"` is for trailing comma in generic. (e.g. `function foo<T,>() {}`)\n  - `\"tuples\"` is for trailing comma in tuple. (e.g. `type Foo = [string,]`)\n\n- [See the other options allowed](https://github.com/eslint/eslint/blob/main/docs/rules/comma-dangle.md#options)\n\n<sup>\n\nTaken with ‚ù§Ô∏è [from ESLint core](https://github.com/eslint/eslint/blob/main/docs/rules/comma-dangle.md)\n\n</sup>\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}