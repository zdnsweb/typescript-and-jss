{"pageProps":{"rule":"# `no-unnecessary-qualifier`\n\nWarns when a namespace qualifier is unnecessary.\n\n## Rule Details\n\nThis rule aims to let users know when a namespace or enum qualifier is unnecessary,\nwhether used for a type or for a value.\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\nnamespace A {\n  export type B = number;\n  const x: A.B = 3;\n}\n```\n\n```ts\nnamespace A {\n  export const x = 3;\n  export const y = A.x;\n}\n```\n\n```ts\nenum A {\n  B,\n  C = A.B,\n}\n```\n\n```ts\nnamespace A {\n  export namespace B {\n    export type T = number;\n    const x: A.B.T = 3;\n  }\n}\n```\n\n### ‚úÖ Correct\n\n```ts\nnamespace X {\n  export type T = number;\n}\n\nnamespace Y {\n  export const x: X.T = 3;\n}\n```\n\n```ts\nenum A {\n  X,\n  Y,\n}\n\nenum B {\n  Z = A.X,\n}\n```\n\n```ts\nnamespace X {\n  export type T = number;\n  namespace Y {\n    type T = string;\n    const x: X.T = 0;\n  }\n}\n```\n\n## When Not To Use It\n\nIf you don't care about having unneeded namespace or enum qualifiers, then you don't need to use this rule.\n\n## Related To\n\n- TSLint: [no-unnecessary-qualifier](https://palantir.github.io/tslint/rules/no-unnecessary-qualifier/)\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [x] üí≠ Requires type information\n"},"__N_SSG":true}