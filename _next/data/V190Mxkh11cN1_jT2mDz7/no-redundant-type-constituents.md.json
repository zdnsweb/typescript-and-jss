{"pageProps":{"rule":"# `no-redundant-type-constituents`\n\nDisallow members of unions and intersections that do nothing or override type information.\n\n## Rule Details\n\nSome types can override some other types (\"constituents\") in a union or intersection and/or be overridden by some other types.\nTypeScript's set theory of types includes cases where a constituent type might be useless in the parent union or intersection.\n\nWithin `|` unions:\n\n- `any` and `unknown` \"override\" all other union members\n- `never` is dropped from unions in any position except when in a return type position\n- primitive types such as `string` \"override\" any of their literal types such as `\"\"`\n\nWithin `&` intersections:\n\n- `any` and `never` \"override\" all other intersection members\n- `unknown` is dropped from intersections\n- literal types \"override\" any primitive types in an intersection\n- literal types such as `\"\"` \"override\" any of their primitive types such as `string`\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ❌ Incorrect\n\n```ts\ntype UnionAny = any | 'foo';\ntype UnionUnknown = unknown | 'foo';\ntype UnionNever = never | 'foo';\n\ntype UnionBooleanLiteral = boolean | false;\ntype UnionNumberLiteral = number | 1;\ntype UnionStringLiteral = string | 'foo';\n\ntype IntersectionAny = any & 'foo';\ntype IntersectionUnknown = string & unknown;\ntype IntersectionNever = string | never;\n\ntype IntersectionBooleanLiteral = boolean & false;\ntype IntersectionNumberLiteral = number & 1;\ntype IntersectionStringLiteral = string & 'foo';\n```\n\n### ✅ Correct\n\n```ts\ntype UnionAny = any;\ntype UnionUnknown = unknown;\ntype UnionNever = never;\n\ntype UnionBooleanLiteral = boolean;\ntype UnionNumberLiteral = number;\ntype UnionStringLiteral = string;\n\ntype IntersectionAny = any;\ntype IntersectionUnknown = string;\ntype IntersectionNever = string;\n\ntype IntersectionBooleanLiteral = false;\ntype IntersectionNumberLiteral = 1;\ntype IntersectionStringLiteral = 'foo';\n\ntype ReturnUnionNever = () => string | never;\n```\n\n## Limitations\n\nThis rule plays it safe and only works with bottom types, top types, and comparing literal types to primitive types.\nIt also does not provide an auto-fixer just yet.\n\n## Further Reading\n\n- [Union Types](https://www.typescriptlang.org/docs/handbook/2/everyday-types.html#union-types)\n- [Intersection Types](https://www.typescriptlang.org/docs/handbook/2/objects.html#intersection-types)\n- [Bottom Types](https://en.wikipedia.org/wiki/Bottom_type)\n- [Top Types](https://en.wikipedia.org/wiki/Top_type)\n\n## Attributes\n\n- [ ] ✅ Recommended\n- [ ] 🔧 Fixable\n- [x] 💭 Requires type information\n"},"__N_SSG":true}