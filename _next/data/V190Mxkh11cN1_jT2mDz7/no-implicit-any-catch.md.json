{"pageProps":{"rule":"# `no-implicit-any-catch`\n\nDisallow usage of the implicit `any` type in catch clauses.\n\nTypeScript 4.0 added support for adding an explicit `any` or `unknown` type annotation on a catch clause variable.\n\nBy default, TypeScript will type a catch clause variable as `any`, so explicitly annotating it as `unknown` can add a lot of safety to your codebase.\n\nThe `noImplicitAny` flag in TypeScript does not cover this for backwards compatibility reasons, however you can use `useUnknownInCatchVariables` (part of `strict`) instead of this rule.\n\n## Rule Details\n\nThis rule requires an explicit type to be declared on a catch clause variable.\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\ntry {\n  // ...\n} catch (e) {\n  // ...\n}\n```\n\n### ‚úÖ Correct\n\n<!-- TODO: prettier currently removes the type annotations, re-enable this once prettier is updated -->\n<!-- prettier-ignore-start -->\n\n```ts\ntry {\n  // ...\n} catch (e: unknown) {\n  // ...\n}\n```\n\n<!-- prettier-ignore-end -->\n\n## Options\n\nThe rule accepts an options object with the following properties:\n\n```ts\ntype Options = {\n  // if false, disallow specifying `: any` as the error type as well. See also `no-explicit-any`\n  allowExplicitAny: boolean;\n};\n\nconst defaults = {\n  allowExplicitAny: false,\n};\n```\n\n### `allowExplicitAny`\n\nThe follow is is **_not_** considered a warning with `{ allowExplicitAny: true }`\n\n<!-- TODO: prettier currently removes the type annotations, re-enable this once prettier is updated -->\n<!-- prettier-ignore-start -->\n\n```ts\ntry {\n  // ...\n} catch (e: any) {\n  // ...\n}\n```\n\n<!-- prettier-ignore-end -->\n\n## When Not To Use It\n\nIf you are not using TypeScript 4.0 (or greater), then you will not be able to use this rule, annotations on catch clauses is not supported.\n\n## Further Reading\n\n- [TypeScript 4.0 Release Notes](https://devblogs.microsoft.com/typescript/announcing-typescript-4-0/#unknown-on-catch)\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}