{"pageProps":{"rule":"# `prefer-as-const`\n\nPrefer usage of `as const` over literal type.\n\nThis rule recommends usage of `const` assertion when type primitive value is equal to type.\n\n## Rule Details\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\nlet bar: 2 = 2;\nlet foo = <'bar'>'bar';\nlet foo = { bar: 'baz' as 'baz' };\n```\n\n### ‚úÖ Correct\n\n```ts\nlet foo = 'bar';\nlet foo = 'bar' as const;\nlet foo: 'bar' = 'bar' as const;\nlet bar = 'bar' as string;\nlet foo = <string>'bar';\nlet foo = { bar: 'baz' };\n```\n\n<!--/tabs-->\n\n## Options\n\n```jsonc\n// .eslintrc.json\n{\n  \"rules\": {\n    \"@typescript-eslint/prefer-as-const\": \"error\"\n  }\n}\n```\n\nThis rule is not configurable.\n\n## When Not To Use It\n\nIf you are using TypeScript < 3.4\n\n## Attributes\n\n- [x] ‚úÖ Recommended\n- [x] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}