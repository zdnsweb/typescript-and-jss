{"pageProps":{"rule":"# `non-nullable-type-assertion-style`\n\nPrefers a non-null assertion over explicit type cast when possible.\n\nThis rule detects when an `as` cast is doing the same job as a `!` would, and suggests fixing the code to be an `!`.\n\n## Rule Details\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ❌ Incorrect\n\n```ts\nconst maybe = Math.random() > 0.5 ? '' : undefined;\n\nconst definitely = maybe as string;\nconst alsoDefinitely = <string>maybe;\n```\n\n### ✅ Correct\n\n```ts\nconst maybe = Math.random() > 0.5 ? '' : undefined;\n\nconst definitely = maybe!;\nconst alsoDefinitely = maybe!;\n```\n\n## When Not To Use It\n\nIf you don't mind having unnecessarily verbose type casts, you can avoid this rule.\n\n## Attributes\n\n- [ ] ✅ Recommended\n- [x] 🔧 Fixable\n- [x] 💭 Requires type information\n"},"__N_SSG":true}