{"pageProps":{"rule":"# `no-parameter-properties`\n\nDisallow the use of parameter properties in class constructors.\n\nParameter properties can be confusing to those new to TypeScript as they are less explicit than other ways\nof declaring and initializing class members.\n\n## Rule Details\n\nThis rule disallows the use of parameter properties in constructors, forcing the user to explicitly\ndeclare all properties in the class.\n\n## Options\n\nThis rule, in its default state, does not require any argument and would completely disallow the use of parameter properties.\nIf you would like to allow certain types of parameter properties then you may pass an object with the following options:\n\n- `allows`, an array containing one or more of the allowed modifiers. Valid values are:\n  - `readonly`, allows **readonly** parameter properties.\n  - `private`, allows **private** parameter properties.\n  - `protected`, allows **protected** parameter properties.\n  - `public`, allows **public** parameter properties.\n  - `private readonly`, allows **private readonly** parameter properties.\n  - `protected readonly`, allows **protected readonly** parameter properties.\n  - `public readonly`, allows **public readonly** parameter properties.\n\n### default\n\nExamples of code for this rule with no options at all:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n```\n\n### readonly\n\nExamples of code for the `{ \"allows\": [\"readonly\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(readonly name: string) {}\n}\n```\n\n### private\n\nExamples of code for the `{ \"allows\": [\"private\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n```\n\n### protected\n\nExamples of code for the `{ \"allows\": [\"protected\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n```\n\n### public\n\nExamples of code for the `{ \"allows\": [\"public\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n```\n\n### private readonly\n\nExamples of code for the `{ \"allows\": [\"private readonly\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n```\n\n### protected readonly\n\nExamples of code for the `{ \"allows\": [\"protected readonly\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n```\n\n### public readonly\n\nExamples of code for the `{ \"allows\": [\"public readonly\"] }` options:\n\n<!--tabs-->\n\n#### ‚ùå Incorrect\n\n```ts\nclass Foo {\n  constructor(readonly name: string) {}\n}\n\nclass Foo {\n  constructor(private name: string) {}\n}\n\nclass Foo {\n  constructor(protected name: string) {}\n}\n\nclass Foo {\n  constructor(public name: string) {}\n}\n\nclass Foo {\n  constructor(private readonly name: string) {}\n}\n\nclass Foo {\n  constructor(protected readonly name: string) {}\n}\n```\n\n#### ‚úÖ Correct\n\n```ts\nclass Foo {\n  constructor(name: string) {}\n}\n\nclass Foo {\n  constructor(public readonly name: string) {}\n}\n```\n\n## When Not To Use It\n\nIf you don't care about the using parameter properties in constructors, then you will not need this rule.\n\n## Related To\n\n- TSLint: [no-parameter-properties](https://palantir.github.io/tslint/rules/no-parameter-properties/)\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [ ] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}