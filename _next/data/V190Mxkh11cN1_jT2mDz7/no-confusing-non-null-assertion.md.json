{"pageProps":{"rule":"# `no-confusing-non-null-assertion`\n\nDisallow non-null assertion in locations that may be confusing.\n\n## Rule Details\n\nUsing a non-null assertion (`!`) next to an assign or equals check (`=` or `==` or `===`) creates code that is confusing as it looks similar to a not equals check (`!=` `!==`).\n\n```typescript\na! == b; // a non-null assertions(`!`) and an equals test(`==`)\na !== b; // not equals test(`!==`)\na! === b; // a non-null assertions(`!`) and an triple equals test(`===`)\n```\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\ninterface Foo {\n  bar?: string;\n  num?: number;\n}\n\nconst foo: Foo = getFoo();\nconst isEqualsBar = foo.bar! == 'hello';\nconst isEqualsNum = 1 + foo.num! == 2;\n```\n\n### ‚úÖ Correct\n\n<!-- prettier-ignore -->\n```ts\ninterface Foo {\n  bar?: string;\n  num?: number;\n}\n\nconst foo: Foo = getFoo();\nconst isEqualsBar = foo.bar == 'hello';\nconst isEqualsNum = (1 + foo.num!) == 2;\n```\n\n## When Not To Use It\n\nIf you don't care about this confusion, then you will not need this rule.\n\n## Further Reading\n\n- [`Issue: Easy misunderstanding: \"! ===\"`](https://github.com/microsoft/TypeScript/issues/37837) in [TypeScript repo](https://github.com/microsoft/TypeScript)\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}