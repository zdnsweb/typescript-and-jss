{"pageProps":{"rule":"# `no-useless-empty-export`\n\nDisallow empty exports that don't change anything in a module file.\n\n## Rule Details\n\nAn empty `export {}` statement is sometimes useful in TypeScript code to turn a file that would otherwise be a script file into a module file.\nPer the TypeScript Handbook [Modules](https://www.typescriptlang.org/docs/handbook/modules.html) page:\n\n> In TypeScript, just as in ECMAScript 2015, any file containing a top-level import or export is considered a module.\n> Conversely, a file without any top-level import or export declarations is treated as a script whose contents are available in the global scope (and therefore to modules as well).\n\nHowever, an `export {}` statement does nothing if there are any other top-level import or export statements in a file.\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ‚ùå Incorrect\n\n```ts\nexport const value = 'Hello, world!';\nexport {};\n```\n\n```ts\nimport 'some-other-module';\nexport {};\n```\n\n### ‚úÖ Correct\n\n```ts\nexport const value = 'Hello, world!';\n```\n\n```ts\nimport 'some-other-module';\n```\n\n## Attributes\n\n- [ ] ‚úÖ Recommended\n- [x] üîß Fixable\n- [ ] üí≠ Requires type information\n"},"__N_SSG":true}