{"pageProps":{"rule":"# `prefer-ts-expect-error`\n\nRecommends using `@ts-expect-error` over `@ts-ignore`.\n\nTypeScript allows you to suppress all errors on a line by placing a single-line comment or a comment block line starting with `@ts-ignore` immediately before the erroring line.\nWhile powerful, there is no way to know if a `@ts-ignore` is actually suppressing an error without manually investigating what happens when the `@ts-ignore` is removed.\n\nThis means its easy for `@ts-ignore`s to be forgotten about, and remain in code even after the error they were suppressing is fixed.\nThis is dangerous, as if a new error arises on that line it'll be suppressed by the forgotten about `@ts-ignore`, and so be missed.\n\nTo address this, TS3.9 ships with a new single-line comment directive: `// @ts-expect-error`.\n\nThis directive operates in the same manner as `@ts-ignore`, but will error if the line it's meant to be suppressing doesn't actually contain an error, making it a lot safer.\n\n## Rule Details\n\nThis rule looks for usages of `@ts-ignore`, and flags them to be replaced with `@ts-expect-error`.\n\nExamples of code for this rule:\n\n<!--tabs-->\n\n### ❌ Incorrect\n\n```ts\n// @ts-ignore\nconst str: string = 1;\n\n/**\n * Explaining comment\n *\n * @ts-ignore */\nconst multiLine: number = 'value';\n\n/** @ts-ignore */\nconst block: string = 1;\n\nconst isOptionEnabled = (key: string): boolean => {\n  // @ts-ignore: if key isn't in globalOptions it'll be undefined which is false\n  return !!globalOptions[key];\n};\n```\n\n### ✅ Correct\n\n```ts\n// @ts-expect-error\nconst str: string = 1;\n\n/**\n * Explaining comment\n *\n * @ts-expect-error */\nconst multiLine: number = 'value';\n\n/** @ts-expect-error */\nconst block: string = 1;\n\nconst isOptionEnabled = (key: string): boolean => {\n  // @ts-expect-error: if key isn't in globalOptions it'll be undefined which is false\n  return !!globalOptions[key];\n};\n```\n\n## When Not To Use It\n\nIf you are **NOT** using TypeScript 3.9 (or greater), then you will not be able to use this rule, as the directive is not supported\n\n## Further Reading\n\n- [Original Implementing PR](https://github.com/microsoft/TypeScript/pull/36014)\n\n## Attributes\n\n- [ ] ✅ Recommended\n- [x] 🔧 Fixable\n- [ ] 💭 Requires type information\n"},"__N_SSG":true}